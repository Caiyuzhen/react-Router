{"ast":null,"code":"var _jsxFileName = \"/Users/Youzen/Desktop/react-Router/src/App.js\";\n//1.引入两个路由组件\nimport Home from './Home';\nimport About from './About'; //2.引入 react-router 函数\n\nimport { HashRouter, BrowserRouter, Routes, Route, Link } from \"react-router-dom\"; //🔥🔥🔥Router 的类型，一个 React 应用只需要用一次\n//🌟哈希 Router   ————  HashRouter\n//使用 URL 的哈希值实现会，带个 #/XXX\n//🌟浏览器 Router ————  BrowserRouter（推荐）\n//使用 H5 的 history.pushState API 实现 \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  return (\n    /*#__PURE__*/\n    //3.👇进行路由配置,声明当前是要用一个非 hash(哈希) 模式的路由\n    // <BrowserRouter>\n    //   {/* 4.通过 to 属性来指定【元素】跟要跳转的【路由地址】 */}\n    //   <Link to='/'>首页</Link>\n    //   <Link to='/about'>关于</Link>\n    //   {/* 5.配置路由出口 */}\n    //   <Routes>\n    //     {/* 6.通过 Route path 来设置对应的【路由地址】，通过  element 来配置要渲染的【渲染组件】 */}\n    //     <Route path='/'     element={<Home />} >    </Route>\n    //     <Route path='/about'  element={<About />}>    </Route>\n    //   </Routes>     \n    // </BrowserRouter>\n    _jsxDEV(HashRouter, {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"\\u9996\\u9875\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/about\",\n        children: \"\\u5173\\u4E8E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 36\n          }, this),\n          children: \"    \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/about\",\n          element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 38\n          }, this),\n          children: \"    \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Youzen/Desktop/react-Router/src/App.js"],"names":["Home","About","HashRouter","BrowserRouter","Routes","Route","Link","App"],"mappings":";AAAA;AACA,OAAOA,IAAP,MAAiB,QAAjB;AACA,OAAOC,KAAP,MAAkB,SAAlB,C,CACA;;AACA,SAASC,UAAT,EAAqBC,aAArB,EAAoCC,MAApC,EAA4CC,KAA5C,EAAmDC,IAAnD,QAA+D,kBAA/D,C,CAGA;AACE;AACI;AAGJ;AACI;;;;AAIN,SAASC,GAAT,GAAe;AACb;AAAA;AAEE;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA,YAAC,UAAD;AAAA,8BAEA,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA,eAGA,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHA,eAMA,QAAC,MAAD;AAAA,gCAEE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,GAAZ;AAAoB,UAAA,OAAO,eAAE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,kBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAsB,UAAA,OAAO,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,kBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAlBF;AAgCD;;KAjCQA,G;AAmCT,eAAeA,GAAf","sourcesContent":["//1.引入两个路由组件\nimport Home from './Home';\nimport About from './About'\n//2.引入 react-router 函数\nimport { HashRouter, BrowserRouter, Routes, Route, Link } from \"react-router-dom\"\n\n\n//🔥🔥🔥Router 的类型，一个 React 应用只需要用一次\n  //🌟哈希 Router   ————  HashRouter\n      //使用 URL 的哈希值实现会，带个 #/XXX\n\n\n  //🌟浏览器 Router ————  BrowserRouter（推荐）\n      //使用 H5 的 history.pushState API 实现 \n\n\n\nfunction App() {\n  return (\n    \n    //3.👇进行路由配置,声明当前是要用一个非 hash(哈希) 模式的路由\n    // <BrowserRouter>\n    //   {/* 4.通过 to 属性来指定【元素】跟要跳转的【路由地址】 */}\n    //   <Link to='/'>首页</Link>\n    //   <Link to='/about'>关于</Link>\n\n    //   {/* 5.配置路由出口 */}\n    //   <Routes>\n    //     {/* 6.通过 Route path 来设置对应的【路由地址】，通过  element 来配置要渲染的【渲染组件】 */}\n    //     <Route path='/'     element={<Home />} >    </Route>\n    //     <Route path='/about'  element={<About />}>    </Route>\n    //   </Routes>     \n    // </BrowserRouter>\n\n\n\n    <HashRouter>\n    {/* 4.通过 to 属性来指定【元素】跟要跳转的【路由地址】 */}\n    <Link to='/'>首页</Link>\n    <Link to='/about'>关于</Link>\n\n    {/* 5.配置路由出口 */}\n    <Routes>\n      {/* 6.通过 Route path 来设置对应的【路由地址】，通过  element 来配置要渲染的【渲染组件】 */}\n      <Route path='/'     element={<Home />} >    </Route>\n      <Route path='/about'  element={<About />}>    </Route>\n    </Routes>     \n  </HashRouter>\n\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}