{"ast":null,"code":"var _jsxFileName = \"/Users/Youzen/Desktop/react-Router/src/Login.js\",\n    _s = $RefreshSig$();\n\n//  🚀编程式路由,要跳转到对应的路由地址\n//纯跳转\n//How?\n//1.导入 useNavigate 钩子函数\n//2.执行钩子函数得到【跳转函数】\n//3.定义跳转函数，传入目标【路由路径】\n//4.执行跳转函数完成跳转（如果在跳转的时候不想加历史记录，可以传【额外的参数】 replace 为 true）\n//跳转 + 传参\n//How？\n//🔥🔥方式一：searchParams 传参 (查询字符串传参)\n//传参\n//navigage('/about?id='1001')\n//取参\n//let [params] = useSearchParams()\n//let id = params.get('id')\n//🔥方式二：params 传参 (路径传参)\n//传参\n//navigage('/about/1001')\n//取参\n//let params = useParams()\n//let id = params.id\n//1.导入 useNavigate 钩子函数\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login() {\n  _s();\n\n  //2.执行钩子函数得到【跳转函数】,解构赋值\n  const navigate = useNavigate(); //3.定义跳转函数，传入目标【路由路径】\n\n  function goAbout() {\n    // navigate('/about')\n    navigate('/about', {\n      replace: true\n    }); //这样就没法通过浏览器的返回了\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Login\", /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: goAbout,\n      children: \" \\u8DF3\\u8F6C\\u5230\\u5173\\u4E8E \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/Youzen/Desktop/react-Router/src/Login.js"],"names":["useNavigate","Login","navigate","goAbout","replace"],"mappings":";;;AAAA;AAEI;AACE;AACI;AACA;AACA;AACA;AAEN;AACE;AACE;AACI;AACE;AAEF;AACE;AACA;AAGN;AACI;AACE;AAEF;AACE;AACA;AAId;AACA,SAAQA,WAAR,QAA0B,kBAA1B;;;AAGA,SAASC,KAAT,GAAgB;AAAA;;AAGd;AACA,QAAMC,QAAQ,GAAGF,WAAW,EAA5B,CAJc,CAOd;;AACA,WAASG,OAAT,GAAmB;AACjB;AACAD,IAAAA,QAAQ,CAAC,QAAD,EAAW;AAACE,MAAAA,OAAO,EAAE;AAAV,KAAX,CAAR,CAFiB,CAEmB;AACrC;;AAGD,sBACE;AAAA,qCAEE;AAAQ,MAAA,OAAO,EAAED,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GApBQF,K;UAIUD,W;;;KAJVC,K;AAsBT,eAAeA,KAAf","sourcesContent":["//  🚀编程式路由,要跳转到对应的路由地址\n\n    //纯跳转\n      //How?\n          //1.导入 useNavigate 钩子函数\n          //2.执行钩子函数得到【跳转函数】\n          //3.定义跳转函数，传入目标【路由路径】\n          //4.执行跳转函数完成跳转（如果在跳转的时候不想加历史记录，可以传【额外的参数】 replace 为 true）\n\n    //跳转 + 传参\n      //How？\n        //🔥🔥方式一：searchParams 传参 (查询字符串传参)\n            //传参\n              //navigage('/about?id='1001')\n\n            //取参\n              //let [params] = useSearchParams()\n              //let id = params.get('id')\n\n\n        //🔥方式二：params 传参 (路径传参)\n            //传参\n              //navigage('/about/1001')\n\n            //取参\n              //let params = useParams()\n              //let id = params.id\n\n\n\n//1.导入 useNavigate 钩子函数\nimport {useNavigate} from 'react-router-dom'\n\n\nfunction Login(){\n\n  \n  //2.执行钩子函数得到【跳转函数】,解构赋值\n  const navigate = useNavigate()\n\n\n  //3.定义跳转函数，传入目标【路由路径】\n  function goAbout (){\n    // navigate('/about')\n    navigate('/about', {replace: true}) //这样就没法通过浏览器的返回了\n  }\n\n\n  return(\n    <div>\n      Login\n      <button onClick={goAbout}> 跳转到关于 </button>\n    </div>\n  )\n}\n\nexport default Login"]},"metadata":{},"sourceType":"module"}